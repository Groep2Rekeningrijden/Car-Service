// <auto-generated />
using System;
using CarMicroService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarMicroService.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230508115706_newGuid")]
    partial class newGuid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CarMicroService.Model.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CarTypeId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CarTypeId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0017fd5-48d0-4405-b2b8-42b0dbb90550"),
                            CarTypeId = new Guid("7d3ec957-3190-460b-bfb3-4f26b0e6a165"),
                            Description = "benzine auto volvo v90",
                            Name = "volvo V90"
                        });
                });

            modelBuilder.Entity("CarMicroService.Model.CarType", b =>
                {
                    b.Property<Guid>("CarTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PricePerKilometer")
                        .HasColumnType("double");

                    b.HasKey("CarTypeId");

                    b.ToTable("CarTypes");

                    b.HasData(
                        new
                        {
                            CarTypeId = new Guid("7d3ec957-3190-460b-bfb3-4f26b0e6a165"),
                            Description = "Benzine auto",
                            Name = "Benzine",
                            PricePerKilometer = 0.11
                        });
                });

            modelBuilder.Entity("CarMicroService.Model.Car", b =>
                {
                    b.HasOne("CarMicroService.Model.CarType", "CarType")
                        .WithMany()
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarType");
                });
#pragma warning restore 612, 618
        }
    }
}
